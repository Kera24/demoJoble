{"ast":null,"code":"import _classCallCheck from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import axios from\"axios\";import\"./RegisterForm.css\";var RegisterForm=/*#__PURE__*/function(_Component){_inherits(RegisterForm,_Component);var _super=_createSuper(RegisterForm);function RegisterForm(props){var _this;_classCallCheck(this,RegisterForm);_this=_super.call(this,props);_this.handleUserNameChange=function(event){_this.setState({userName:event.target.value});axios.post(\"/users/validateUserName\",{userName:event.target.value}).then(function(res){console.log(\"Username \",res.data.userName,\" exists!\");}).catch(function(err){if(_this.state.userName.length>3&&_this.state.userName!==\"\"){console.log(\"Valid Username!\");}else{console.log(\"Invalid Username\");}});};_this.handleUserPasswordChange=function(event){_this.setState({userPassword:event.target.value});};_this.handleUserTypeChange=function(event){_this.setState({userType:event.target.value});_this.setState({companyName:\"\"});if(event.target.value===\"recruiter\"){_this.getExistingCompanies();}else{_this.setState({showNewCompanyForm:false,isCompanyNew:false});}};_this.getExistingCompanies=function(){axios.get(\"/companies/getCompanies\").then(function(res){console.log(res.data,\" is in the database\");_this.setState({companies:res.data});console.log(\"companies in state:\",_this.state.companies);}).catch(function(err){console.log('error occured during companies retrieval');});};_this.handleCompanyNameChange=function(event){if(event.target.value===\"registerNewCompany\"){_this.setState({showNewCompanyForm:true,isCompanyNew:true,companyName:\"\"});}else{_this.setState({showNewCompanyForm:false,isCompanyNew:false});_this.setState({companyName:event.target.value});console.log(\"companyName selected:\",event.target.value);}};_this.handleNewCompanyNameChange=function(event){_this.setState({isCompanyNew:true,companyName:event.target.value});console.log(\"new companyName selected:\",event.target.value);};_this.handleCompanyWebsiteChange=function(event){_this.setState({companyWebsite:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanyTypeChange=function(event){_this.setState({companyType:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanySizeChange=function(event){_this.setState({companySize:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanyHeadquatersChange=function(event){_this.setState({companyHeadquaters:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanyFoundedChange=function(event){_this.setState({companyFounded:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanySectorChange=function(event){_this.setState({companySector:event.target.value},function(){// console.log(event.target.value);\n});};_this.handleCompanyAboutChange=function(event){_this.setState({companyAbout:event.target.value},function(){// console.log(event.target.value);\n});};_this.onSuccessful_Register=function(){_this.props.onSuccessful_Register();};_this.handleRegister=function(event){event.preventDefault();var user={userName:_this.state.userName,userPassword:_this.state.userPassword,userType:_this.state.userType,companyName:_this.state.companyName,loginStatus:_this.state.loginStatus};var company={companyName:_this.state.companyName,companyWebsite:_this.state.companyWebsite,companyType:_this.state.companyType,companySize:_this.state.companySize,companyHeadquaters:_this.state.companyHeadquaters,companyFounded:_this.state.companyFounded,companySector:_this.state.companySector,companyAbout:_this.state.companyAbout,companyJobs:[],companyReviews:[]};if(user.userType===\"recruiter\"){console.log(\"Is it a new company?\",_this.state.isCompanyNew);}// Add a student or recruiter with known company\nif(user.userType===\"student\"||user.userType===\"recruiter\"&&!_this.state.isCompanyNew){axios.post(\"/users/add\",user).then(function(res){console.log(res.data.userName,\" registered!\");_this.onSuccessful_Register();// show dashboard\n}).catch(function(err){console.log(\"An error occured during user registration\\n\",err);alert(\"User Registration Failed\");axios.post(\"/users/delete\",user).then(function(res){console.log(\"User registration is undone\");}).catch(function(err){console.log(\"User registration couldn't be undone\",err);alert(\"Recruiter rollback failed\");});});}else if(user.userType===\"recruiter\"&&_this.state.isCompanyNew){// First add user\naxios.post(\"/users/add\",user).then(function(res){// If user registration goes through, then add company\nconsole.log(\"User \",res.data.userName,\" registered!\");axios.post(\"/companies/add\",company).then(function(res){console.log(\"Company \",res.data.companyName,\" registered!\");_this.onSuccessful_Register();}).catch(function(err){console.log(\"An error occured during company registration\\n\",err);alert(\"Company Registration Failed\");axios.post(\"/users/delete\",user).then(function(res){console.log(\"User registration is undone\");}).catch(function(err){console.log(\"User registration couldn't be undone\",err);alert(\"Recruiter rollback failed\");});});}).catch(function(err){console.log(\"An error occured during user registration\\n\",err);alert(\"User Registration Failed\");});}};_this.onCancelClick=function(){_this.props.onLoginClick();};_this.state={userName:\"\",userPassword:\"\",userType:\"student\",loginStatus:\"offline\",companyName:\"\",showNewCompanyForm:false,isCompanyNew:true,companyWebsite:\"\",companyType:\"\",companySize:\"\",companyHeadquaters:\"\",companyFounded:\"\",companySector:\"\",companyAbout:\"\",companies:[]};return _this;}_createClass(RegisterForm,[{key:\"componentDidMount\",value:function componentDidMount(){console.log(\"RegisterFrom componentDidMount\");}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){console.log(\"RegisterFrom componentwillunmount\");}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"form\",{className:\"myRegisterForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"Username\"},\"Username (min. 4 characters)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"userName\",value:this.state.userName,onChange:this.handleUserNameChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"Password\"},\"Password (min. 4 characters)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control registerform-control\",id:\"userPassword\",value:this.state.userPassword,onChange:this.handleUserPasswordChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"Occupation\"},\"Occupation\"),/*#__PURE__*/React.createElement(\"select\",{className:\"form-control registerform-control\",id:\"userType\",value:this.state.userType,onChange:this.handleUserTypeChange},/*#__PURE__*/React.createElement(\"option\",{value:\"student\"},\"Student\"),/*#__PURE__*/React.createElement(\"option\",{value:\"recruiter\"},\"Recruiter\"))),this.state.userType===\"recruiter\"?/*#__PURE__*/React.createElement(\"div\",null,!this.state.showNewCompanyForm&&/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyName\"},\"Company Name\"),/*#__PURE__*/React.createElement(\"select\",{className:\"form-control registerform-control\",id:\"companyName\",onChange:this.handleCompanyNameChange},/*#__PURE__*/React.createElement(\"option\",{disabled:true,selected:true},\"Select one\"),this.state.companies.map(function(company){return/*#__PURE__*/React.createElement(\"option\",{key:company._id,value:company.companyName},company.companyName);}),/*#__PURE__*/React.createElement(\"option\",{value:\"registerNewCompany\"},\"Create one\"))),this.state.showNewCompanyForm&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyName\"},\"Company Name\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companyName\",value:this.state.companyName,onChange:this.handleNewCompanyNameChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyWebsite\"},\"Company Website\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companyWebsite\",value:this.state.companyWebsite,onChange:this.handleCompanyWebsiteChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyType\"},\"Company Type\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companyType\",value:this.state.companyType,onChange:this.handleCompanyTypeChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companySize\"},\"Company Size\"),/*#__PURE__*/React.createElement(\"select\",{className:\"form-control registerform-control\",id:\"companySize\",value:this.state.companySize,onChange:this.handleCompanySizeChange},/*#__PURE__*/React.createElement(\"option\",{value:\"Self-employed\"},\"A: Self-employed\"),/*#__PURE__*/React.createElement(\"option\",{value:\"1-10 employees\"},\"B: 1-10 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"11-50 employees\"},\"C: 11-50 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"51-200 employees\"},\"D: 51-200 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"201-500 employees\"},\"E: 201-500 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"501-1000 employees\"},\"F: 501-1000 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"1001-5000 employees\"},\"G: 1001-5000 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"5001-10,000 employees\"},\"H: 5001-10,000 employees\"),/*#__PURE__*/React.createElement(\"option\",{value:\"10,001+ employees\"},\"I: 10,001+ employees\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyHeadquaters\"},\"Headquaters Location\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"\",value:this.state.companyHeadquaters,onChange:this.handleCompanyHeadquatersChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyFounded\"},\"Year Founded\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companyFounded\",value:this.state.companyFounded,onChange:this.handleCompanyFoundedChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companySector\"},\"Sector\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companySector\",value:this.state.companySector,onChange:this.handleCompanySectorChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group  registerform-group row\"},/*#__PURE__*/React.createElement(\"label\",{className:\"registerform-label col\",htmlFor:\"companyAbout\"},\"About Your Company\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"form-control registerform-control\",id:\"companyAbout\",value:this.state.companyAbout,onChange:this.handleCompanyAboutChange})))):null,/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-success registerform-btn\",onClick:this.handleRegister},\"Register\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary registerform-btn\",onClick:this.onCancelClick},\"Cancel\"))));}}]);return RegisterForm;}(Component);export{RegisterForm as default};","map":{"version":3,"sources":["/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/src/Login/RegisterForm.js"],"names":["React","Component","axios","RegisterForm","props","handleUserNameChange","event","setState","userName","target","value","post","then","res","console","log","data","catch","err","state","length","handleUserPasswordChange","userPassword","handleUserTypeChange","userType","companyName","getExistingCompanies","showNewCompanyForm","isCompanyNew","get","companies","handleCompanyNameChange","handleNewCompanyNameChange","handleCompanyWebsiteChange","companyWebsite","handleCompanyTypeChange","companyType","handleCompanySizeChange","companySize","handleCompanyHeadquatersChange","companyHeadquaters","handleCompanyFoundedChange","companyFounded","handleCompanySectorChange","companySector","handleCompanyAboutChange","companyAbout","onSuccessful_Register","handleRegister","preventDefault","user","loginStatus","company","companyJobs","companyReviews","alert","onCancelClick","onLoginClick","map","_id"],"mappings":"4uBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,oBAAP,C,GAEqBC,CAAAA,Y,4GACnB,sBAAYC,KAAZ,CAAmB,8CACjB,uBAAMA,KAAN,EADiB,MAsBnBC,oBAtBmB,CAsBI,SAAAC,KAAK,CAAI,CAC9B,MAAKC,QAAL,CAAc,CAAEC,QAAQ,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAAzB,CAAd,EACAR,KAAK,CACFS,IADH,CACQ,yBADR,CACmC,CAAEH,QAAQ,CAAEF,KAAK,CAACG,MAAN,CAAaC,KAAzB,CADnC,EAEGE,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAyBF,GAAG,CAACG,IAAJ,CAASR,QAAlC,CAA4C,UAA5C,EACD,CAJH,EAKGS,KALH,CAKS,SAAAC,GAAG,CAAI,CACZ,GAAI,MAAKC,KAAL,CAAWX,QAAX,CAAoBY,MAApB,CAA6B,CAA7B,EAAkC,MAAKD,KAAL,CAAWX,QAAX,GAAwB,EAA9D,CAAkE,CAChEM,OAAO,CAACC,GAAR,CAAY,iBAAZ,EACD,CAFD,IAEO,CACLD,OAAO,CAACC,GAAR,CAAY,kBAAZ,EACD,CACF,CAXH,EAYD,CApCkB,OAsCnBM,wBAtCmB,CAsCQ,SAAAf,KAAK,CAAI,CAClC,MAAKC,QAAL,CAAc,CAAEe,YAAY,CAAEhB,KAAK,CAACG,MAAN,CAAaC,KAA7B,CAAd,EACD,CAxCkB,OA0CnBa,oBA1CmB,CA0CI,SAAAjB,KAAK,CAAI,CAC9B,MAAKC,QAAL,CAAc,CAAEiB,QAAQ,CAAElB,KAAK,CAACG,MAAN,CAAaC,KAAzB,CAAd,EACA,MAAKH,QAAL,CAAc,CAAEkB,WAAW,CAAE,EAAf,CAAd,EAEA,GAAGnB,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAuB,WAA1B,CAAsC,CACpC,MAAKgB,oBAAL,GACD,CAFD,IAEK,CACH,MAAKnB,QAAL,CAAc,CACZoB,kBAAkB,CAAE,KADR,CAEZC,YAAY,CAAE,KAFF,CAAd,EAID,CACF,CAtDkB,OAwDnBF,oBAxDmB,CAwDI,UAAM,CACzBxB,KAAK,CACF2B,GADH,CACO,yBADP,EAEGjB,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAhB,CAAsB,qBAAtB,EAEA,MAAKT,QAAL,CAAc,CACZuB,SAAS,CAAEjB,GAAG,CAACG,IADH,CAAd,EAIAF,OAAO,CAACC,GAAR,CAAY,qBAAZ,CAAmC,MAAKI,KAAL,CAAWW,SAA9C,EAED,CAXH,EAYGb,KAZH,CAYS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CAAY,0CAAZ,EACD,CAdH,EAeH,CAxEkB,OA0EnBgB,uBA1EmB,CA0EO,SAAAzB,KAAK,CAAI,CAEjC,GAAGA,KAAK,CAACG,MAAN,CAAaC,KAAb,GAAuB,oBAA1B,CAA+C,CAC7C,MAAKH,QAAL,CAAc,CACZoB,kBAAkB,CAAE,IADR,CAEZC,YAAY,CAAE,IAFF,CAGZH,WAAW,CAAE,EAHD,CAAd,EAKD,CAND,IAMK,CACH,MAAKlB,QAAL,CAAc,CACZoB,kBAAkB,CAAE,KADR,CAEZC,YAAY,CAAE,KAFF,CAAd,EAKA,MAAKrB,QAAL,CAAc,CACZkB,WAAW,CAAEnB,KAAK,CAACG,MAAN,CAAaC,KADd,CAAd,EAGAI,OAAO,CAACC,GAAR,CAAY,uBAAZ,CAAqCT,KAAK,CAACG,MAAN,CAAaC,KAAlD,EACD,CAEF,CA9FkB,OAgGnBsB,0BAhGmB,CAgGU,SAAA1B,KAAK,CAAI,CACpC,MAAKC,QAAL,CAAc,CACZqB,YAAY,CAAE,IADF,CAEZH,WAAW,CAAEnB,KAAK,CAACG,MAAN,CAAaC,KAFd,CAAd,EAIAI,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCT,KAAK,CAACG,MAAN,CAAaC,KAAtD,EACD,CAtGkB,OAyGnBuB,0BAzGmB,CAyGU,SAAA3B,KAAK,CAAI,CACpC,MAAKC,QAAL,CAAc,CAAE2B,cAAc,CAAE5B,KAAK,CAACG,MAAN,CAAaC,KAA/B,CAAd,CAAsD,UAAM,CAC1D;AACD,CAFD,EAGD,CA7GkB,OA+GnByB,uBA/GmB,CA+GO,SAAA7B,KAAK,CAAI,CACjC,MAAKC,QAAL,CAAc,CAAE6B,WAAW,CAAE9B,KAAK,CAACG,MAAN,CAAaC,KAA5B,CAAd,CAAmD,UAAM,CACvD;AACD,CAFD,EAGD,CAnHkB,OAqHnB2B,uBArHmB,CAqHO,SAAA/B,KAAK,CAAI,CACjC,MAAKC,QAAL,CAAc,CAAE+B,WAAW,CAAEhC,KAAK,CAACG,MAAN,CAAaC,KAA5B,CAAd,CAAmD,UAAM,CACvD;AACD,CAFD,EAGD,CAzHkB,OA2HnB6B,8BA3HmB,CA2Hc,SAAAjC,KAAK,CAAI,CACxC,MAAKC,QAAL,CAAc,CAAEiC,kBAAkB,CAAElC,KAAK,CAACG,MAAN,CAAaC,KAAnC,CAAd,CAA0D,UAAM,CAC9D;AACD,CAFD,EAGD,CA/HkB,OAiInB+B,0BAjImB,CAiIU,SAAAnC,KAAK,CAAI,CACpC,MAAKC,QAAL,CAAc,CAAEmC,cAAc,CAAEpC,KAAK,CAACG,MAAN,CAAaC,KAA/B,CAAd,CAAsD,UAAM,CAC1D;AACD,CAFD,EAGD,CArIkB,OAuInBiC,yBAvImB,CAuIS,SAAArC,KAAK,CAAI,CACnC,MAAKC,QAAL,CAAc,CAAEqC,aAAa,CAAEtC,KAAK,CAACG,MAAN,CAAaC,KAA9B,CAAd,CAAqD,UAAM,CACzD;AACD,CAFD,EAGD,CA3IkB,OA6InBmC,wBA7ImB,CA6IQ,SAAAvC,KAAK,CAAI,CAClC,MAAKC,QAAL,CAAc,CAAEuC,YAAY,CAAExC,KAAK,CAACG,MAAN,CAAaC,KAA7B,CAAd,CAAoD,UAAM,CACxD;AACD,CAFD,EAGD,CAjJkB,OAmJnBqC,qBAnJmB,CAmJK,UAAM,CAC5B,MAAK3C,KAAL,CAAW2C,qBAAX,GACD,CArJkB,OA+JnBC,cA/JmB,CA+JF,SAAA1C,KAAK,CAAI,CACxBA,KAAK,CAAC2C,cAAN,GACA,GAAMC,CAAAA,IAAI,CAAG,CACX1C,QAAQ,CAAE,MAAKW,KAAL,CAAWX,QADV,CAEXc,YAAY,CAAE,MAAKH,KAAL,CAAWG,YAFd,CAGXE,QAAQ,CAAE,MAAKL,KAAL,CAAWK,QAHV,CAIXC,WAAW,CAAE,MAAKN,KAAL,CAAWM,WAJb,CAKX0B,WAAW,CAAE,MAAKhC,KAAL,CAAWgC,WALb,CAAb,CAOA,GAAMC,CAAAA,OAAO,CAAG,CACd3B,WAAW,CAAE,MAAKN,KAAL,CAAWM,WADV,CAEdS,cAAc,CAAE,MAAKf,KAAL,CAAWe,cAFb,CAGdE,WAAW,CAAE,MAAKjB,KAAL,CAAWiB,WAHV,CAIdE,WAAW,CAAE,MAAKnB,KAAL,CAAWmB,WAJV,CAKdE,kBAAkB,CAAE,MAAKrB,KAAL,CAAWqB,kBALjB,CAMdE,cAAc,CAAE,MAAKvB,KAAL,CAAWuB,cANb,CAOdE,aAAa,CAAE,MAAKzB,KAAL,CAAWyB,aAPZ,CAQdE,YAAY,CAAE,MAAK3B,KAAL,CAAW2B,YARX,CASdO,WAAW,CAAE,EATC,CAUdC,cAAc,CAAE,EAVF,CAAhB,CAaA,GAAIJ,IAAI,CAAC1B,QAAL,GAAkB,WAAtB,CAAmC,CACjCV,OAAO,CAACC,GAAR,CAAY,sBAAZ,CAAoC,MAAKI,KAAL,CAAWS,YAA/C,EACD,CAED;AACA,GACEsB,IAAI,CAAC1B,QAAL,GAAkB,SAAlB,EACC0B,IAAI,CAAC1B,QAAL,GAAkB,WAAlB,EAAiC,CAAC,MAAKL,KAAL,CAAWS,YAFhD,CAGE,CACA1B,KAAK,CACFS,IADH,CACQ,YADR,CACsBuC,IADtB,EAEGtC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,IAAJ,CAASR,QAArB,CAA+B,cAA/B,EACA,MAAKuC,qBAAL,GAA8B;AAC/B,CALH,EAMG9B,KANH,CAMS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CAAY,6CAAZ,CAA2DG,GAA3D,EACAqC,KAAK,CAAC,0BAAD,CAAL,CACArD,KAAK,CACFS,IADH,CACQ,eADR,CACyBuC,IADzB,EAEGtC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CAJH,EAKGE,KALH,CAKS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAoDG,GAApD,EACAqC,KAAK,CAAC,2BAAD,CAAL,CACD,CARH,EASD,CAlBH,EAmBD,CAvBD,IAuBO,IAAIL,IAAI,CAAC1B,QAAL,GAAkB,WAAlB,EAAiC,MAAKL,KAAL,CAAWS,YAAhD,CAA8D,CACnE;AACA1B,KAAK,CACFS,IADH,CACQ,YADR,CACsBuC,IADtB,EAEGtC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACX;AACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,CAAqBF,GAAG,CAACG,IAAJ,CAASR,QAA9B,CAAwC,cAAxC,EACAN,KAAK,CACFS,IADH,CACQ,gBADR,CAC0ByC,OAD1B,EAEGxC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBF,GAAG,CAACG,IAAJ,CAASS,WAAjC,CAA8C,cAA9C,EACA,MAAKsB,qBAAL,GACD,CALH,EAMG9B,KANH,CAMS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CACE,gDADF,CAEEG,GAFF,EAIAqC,KAAK,CAAC,6BAAD,CAAL,CACArD,KAAK,CACFS,IADH,CACQ,eADR,CACyBuC,IADzB,EAEGtC,IAFH,CAEQ,SAAAC,GAAG,CAAI,CACXC,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACD,CAJH,EAKGE,KALH,CAKS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CAAY,sCAAZ,CAAoDG,GAApD,EACAqC,KAAK,CAAC,2BAAD,CAAL,CACD,CARH,EASD,CArBH,EAsBD,CA3BH,EA4BGtC,KA5BH,CA4BS,SAAAC,GAAG,CAAI,CACZJ,OAAO,CAACC,GAAR,CAAY,6CAAZ,CAA2DG,GAA3D,EACAqC,KAAK,CAAC,0BAAD,CAAL,CACD,CA/BH,EAgCD,CACF,CApPkB,OAsPnBC,aAtPmB,CAsPH,UAAM,CACpB,MAAKpD,KAAL,CAAWqD,YAAX,GACD,CAxPkB,CAGjB,MAAKtC,KAAL,CAAa,CACXX,QAAQ,CAAE,EADC,CAEXc,YAAY,CAAE,EAFH,CAGXE,QAAQ,CAAE,SAHC,CAIX2B,WAAW,CAAE,SAJF,CAKX1B,WAAW,CAAE,EALF,CAMXE,kBAAkB,CAAE,KANT,CAOXC,YAAY,CAAE,IAPH,CAQXM,cAAc,CAAE,EARL,CASXE,WAAW,CAAE,EATF,CAUXE,WAAW,CAAE,EAVF,CAWXE,kBAAkB,CAAE,EAXT,CAYXE,cAAc,CAAE,EAZL,CAaXE,aAAa,CAAE,EAbJ,CAcXE,YAAY,CAAE,EAdH,CAeXhB,SAAS,CAAE,EAfA,CAAb,CAHiB,aAoBlB,C,sFAmImB,CAClBhB,OAAO,CAACC,GAAR,CAAY,gCAAZ,EACD,C,mEAEsB,CACrBD,OAAO,CAACC,GAAR,CAAY,mCAAZ,EACD,C,uCA6FQ,CACP,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,2BAAK,SAAS,CAAC,WAAf,eACE,4BAAM,SAAS,CAAC,gBAAhB,eACE,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,UAAlD,iCADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,UAHL,CAIE,KAAK,CAAE,KAAKI,KAAL,CAAWX,QAJpB,CAKE,QAAQ,CAAE,KAAKH,oBALjB,EAFF,CADF,cAWE,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,UAAlD,iCADF,cAEE,6BACE,IAAI,CAAC,UADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,cAHL,CAIE,KAAK,CAAE,KAAKc,KAAL,CAAWG,YAJpB,CAKE,QAAQ,CAAE,KAAKD,wBALjB,EAFF,CAXF,cAqBE,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,YAAlD,eADF,cAEE,8BACE,SAAS,CAAC,mCADZ,CAEE,EAAE,CAAC,UAFL,CAGE,KAAK,CAAE,KAAKF,KAAL,CAAWK,QAHpB,CAIE,QAAQ,CAAE,KAAKD,oBAJjB,eAME,8BAAQ,KAAK,CAAC,SAAd,YANF,cAOE,8BAAQ,KAAK,CAAC,WAAd,cAPF,CAFF,CArBF,CAkCI,KAAKJ,KAAL,CAAWK,QAAX,GAAwB,WAAzB,cACC,+BACG,CAAC,KAAKL,KAAL,CAAWQ,kBAAZ,eACC,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,aAAlD,iBADF,cAEE,8BACI,SAAS,CAAC,mCADd,CAEI,EAAE,CAAC,aAFP,CAGI,QAAQ,CAAE,KAAKI,uBAHnB,eAKI,8BAAQ,QAAQ,KAAhB,CAAiB,QAAQ,KAAzB,eALJ,CAMK,KAAKZ,KAAL,CAAWW,SAAX,CAAqB4B,GAArB,CAAyB,SAACN,OAAD,qBAAa,8BAAQ,GAAG,CAAEA,OAAO,CAACO,GAArB,CAA0B,KAAK,CAAEP,OAAO,CAAC3B,WAAzC,EAAuD2B,OAAO,CAAC3B,WAA/D,CAAb,EAAzB,CANL,cAOI,8BAAQ,KAAK,CAAC,oBAAd,eAPJ,CAFF,CAFJ,CAeG,KAAKN,KAAL,CAAWQ,kBAAX,eACD,4CACI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,aAAlD,iBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,aAHL,CAIE,KAAK,CAAE,KAAKR,KAAL,CAAWM,WAJpB,CAKE,QAAQ,CAAE,KAAKO,0BALjB,EAFF,CADJ,cAYI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,gBAAlD,oBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,gBAHL,CAIE,KAAK,CAAE,KAAKb,KAAL,CAAWe,cAJpB,CAKE,QAAQ,CAAE,KAAKD,0BALjB,EAFF,CAZJ,cAsBI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,aAAlD,iBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,aAHL,CAIE,KAAK,CAAE,KAAKd,KAAL,CAAWiB,WAJpB,CAKE,QAAQ,CAAE,KAAKD,uBALjB,EAFF,CAtBJ,cAgCI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,aAAlD,iBADF,cAEE,8BACE,SAAS,CAAC,mCADZ,CAEE,EAAE,CAAC,aAFL,CAGE,KAAK,CAAE,KAAKhB,KAAL,CAAWmB,WAHpB,CAIE,QAAQ,CAAE,KAAKD,uBAJjB,eAME,8BAAQ,KAAK,CAAC,eAAd,qBANF,cAOE,8BAAQ,KAAK,CAAC,gBAAd,sBAPF,cAQE,8BAAQ,KAAK,CAAC,iBAAd,uBARF,cASE,8BAAQ,KAAK,CAAC,kBAAd,wBATF,cAUE,8BAAQ,KAAK,CAAC,mBAAd,yBAVF,cAaE,8BAAQ,KAAK,CAAC,oBAAd,0BAbF,cAgBE,8BAAQ,KAAK,CAAC,qBAAd,2BAhBF,cAmBE,8BAAQ,KAAK,CAAC,uBAAd,6BAnBF,cAsBE,8BAAQ,KAAK,CAAC,mBAAd,yBAtBF,CAFF,CAhCJ,cA6DI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,oBAAlD,yBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,EAHL,CAIE,KAAK,CAAE,KAAKlB,KAAL,CAAWqB,kBAJpB,CAKE,QAAQ,CAAE,KAAKD,8BALjB,EAFF,CA7DJ,cAuEI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,gBAAlD,iBADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,gBAHL,CAIE,KAAK,CAAE,KAAKpB,KAAL,CAAWuB,cAJpB,CAKE,QAAQ,CAAE,KAAKD,0BALjB,EAFF,CAvEJ,cAiFI,2BAAK,SAAS,CAAC,oCAAf,eACE,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,eAAlD,WADF,cAEE,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,eAHL,CAIE,KAAK,CAAE,KAAKtB,KAAL,CAAWyB,aAJpB,CAKE,QAAQ,CAAE,KAAKD,yBALjB,EAFF,CAjFJ,cA2FI,2BAAK,SAAS,CAAC,oCAAf,eACA,6BAAO,SAAS,CAAC,wBAAjB,CAA0C,OAAO,CAAC,cAAlD,uBADA,cAEA,6BACE,IAAI,CAAC,MADP,CAEE,SAAS,CAAC,mCAFZ,CAGE,EAAE,CAAC,cAHL,CAIE,KAAK,CAAE,KAAKxB,KAAL,CAAW2B,YAJpB,CAKE,QAAQ,CAAE,KAAKD,wBALjB,EAFA,CA3FJ,CAhBF,CADD,CAyHG,IA3JN,cA6JE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,kCAFZ,CAGE,OAAO,CAAE,KAAKG,cAHhB,aA7JF,cAqKE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,kCAFZ,CAGE,OAAO,CAAE,KAAKQ,aAHhB,WArKF,CADF,CADF,CADF,CAmLD,C,0BA/auCvD,S,SAArBE,Y","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport \"./RegisterForm.css\"\n\nexport default class RegisterForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userName: \"\",\n      userPassword: \"\",\n      userType: \"student\",\n      loginStatus: \"offline\",\n      companyName: \"\",\n      showNewCompanyForm: false,\n      isCompanyNew: true,\n      companyWebsite: \"\",\n      companyType: \"\",\n      companySize: \"\",\n      companyHeadquaters: \"\",\n      companyFounded: \"\",\n      companySector: \"\",\n      companyAbout: \"\",\n      companies: [],\n    };\n  }\n\n  handleUserNameChange = event => {\n    this.setState({ userName: event.target.value });\n    axios\n      .post(\"/users/validateUserName\", { userName: event.target.value })\n      .then(res => {\n        console.log(\"Username \", res.data.userName, \" exists!\");\n      })\n      .catch(err => {\n        if (this.state.userName.length > 3 && this.state.userName !== \"\") {\n          console.log(\"Valid Username!\");\n        } else {\n          console.log(\"Invalid Username\");\n        }\n      });\n  };\n\n  handleUserPasswordChange = event => {\n    this.setState({ userPassword: event.target.value });\n  };\n\n  handleUserTypeChange = event => {\n    this.setState({ userType: event.target.value });\n    this.setState({ companyName: \"\" });\n\n    if(event.target.value === \"recruiter\"){\n      this.getExistingCompanies();\n    }else{\n      this.setState({\n        showNewCompanyForm: false,\n        isCompanyNew: false,\n      })\n    }\n  };\n\n  getExistingCompanies = () => {\n      axios\n        .get(\"/companies/getCompanies\")\n        .then(res => {\n          console.log(res.data, \" is in the database\");\n      \n          this.setState({\n            companies: res.data\n          })\n  \n          console.log(\"companies in state:\", this.state.companies);\n  \n        })\n        .catch(err => {\n          console.log('error occured during companies retrieval');\n        });\n  }\n\n  handleCompanyNameChange = event => {\n    \n    if(event.target.value === \"registerNewCompany\"){\n      this.setState({\n        showNewCompanyForm: true,\n        isCompanyNew: true,\n        companyName: \"\"\n      })\n    }else{\n      this.setState({\n        showNewCompanyForm: false,\n        isCompanyNew: false,\n      })\n\n      this.setState({\n        companyName: event.target.value,\n      });\n      console.log(\"companyName selected:\", event.target.value);\n    }\n\n  };\n\n  handleNewCompanyNameChange = event => {\n    this.setState({\n      isCompanyNew: true,\n      companyName: event.target.value,\n    });\n    console.log(\"new companyName selected:\", event.target.value);\n  }\n\n\n  handleCompanyWebsiteChange = event => {\n    this.setState({ companyWebsite: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyTypeChange = event => {\n    this.setState({ companyType: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanySizeChange = event => {\n    this.setState({ companySize: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyHeadquatersChange = event => {\n    this.setState({ companyHeadquaters: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyFoundedChange = event => {\n    this.setState({ companyFounded: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanySectorChange = event => {\n    this.setState({ companySector: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  handleCompanyAboutChange = event => {\n    this.setState({ companyAbout: event.target.value }, () => {\n      // console.log(event.target.value);\n    });\n  };\n\n  onSuccessful_Register = () => {\n    this.props.onSuccessful_Register();\n  };\n\n  componentDidMount() {\n    console.log(\"RegisterFrom componentDidMount\");\n  }\n\n  componentWillUnmount() {\n    console.log(\"RegisterFrom componentwillunmount\");\n  }\n\n  handleRegister = event => {\n    event.preventDefault();\n    const user = {\n      userName: this.state.userName,\n      userPassword: this.state.userPassword,\n      userType: this.state.userType,\n      companyName: this.state.companyName,\n      loginStatus: this.state.loginStatus\n    };\n    const company = {\n      companyName: this.state.companyName,\n      companyWebsite: this.state.companyWebsite,\n      companyType: this.state.companyType,\n      companySize: this.state.companySize,\n      companyHeadquaters: this.state.companyHeadquaters,\n      companyFounded: this.state.companyFounded,\n      companySector: this.state.companySector,\n      companyAbout: this.state.companyAbout,\n      companyJobs: [],\n      companyReviews: []\n    };\n\n    if (user.userType === \"recruiter\") {\n      console.log(\"Is it a new company?\", this.state.isCompanyNew);\n    }\n\n    // Add a student or recruiter with known company\n    if (\n      user.userType === \"student\" ||\n      (user.userType === \"recruiter\" && !this.state.isCompanyNew)\n    ) {\n      axios\n        .post(\"/users/add\", user)\n        .then(res => {\n          console.log(res.data.userName, \" registered!\");\n          this.onSuccessful_Register(); // show dashboard\n        })\n        .catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n          axios\n            .post(\"/users/delete\", user)\n            .then(res => {\n              console.log(\"User registration is undone\");\n            })\n            .catch(err => {\n              console.log(\"User registration couldn't be undone\", err);\n              alert(\"Recruiter rollback failed\");\n            });\n        });\n    } else if (user.userType === \"recruiter\" && this.state.isCompanyNew) {\n      // First add user\n      axios\n        .post(\"/users/add\", user)\n        .then(res => {\n          // If user registration goes through, then add company\n          console.log(\"User \", res.data.userName, \" registered!\");\n          axios\n            .post(\"/companies/add\", company)\n            .then(res => {\n              console.log(\"Company \", res.data.companyName, \" registered!\");\n              this.onSuccessful_Register();\n            })\n            .catch(err => {\n              console.log(\n                \"An error occured during company registration\\n\",\n                err\n              );\n              alert(\"Company Registration Failed\");\n              axios\n                .post(\"/users/delete\", user)\n                .then(res => {\n                  console.log(\"User registration is undone\");\n                })\n                .catch(err => {\n                  console.log(\"User registration couldn't be undone\", err);\n                  alert(\"Recruiter rollback failed\");\n                });\n            });\n        })\n        .catch(err => {\n          console.log(\"An error occured during user registration\\n\", err);\n          alert(\"User Registration Failed\");\n        });\n    }\n  };\n\n  onCancelClick = () => {\n    this.props.onLoginClick();\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"container\">\n          <form className=\"myRegisterForm\">\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Username\">Username (min. 4 characters)</label>\n              <input\n                type=\"text\"\n                className=\"form-control registerform-control\"\n                id=\"userName\"\n                value={this.state.userName}\n                onChange={this.handleUserNameChange}\n              />\n            </div>\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Password\">Password (min. 4 characters)</label>\n              <input\n                type=\"password\"\n                className=\"form-control registerform-control\"\n                id=\"userPassword\"\n                value={this.state.userPassword}\n                onChange={this.handleUserPasswordChange}\n              />\n            </div>\n            <div className=\"form-group  registerform-group row\">\n              <label className=\"registerform-label col\" htmlFor=\"Occupation\">Occupation</label>\n              <select\n                className=\"form-control registerform-control\"\n                id=\"userType\"\n                value={this.state.userType}\n                onChange={this.handleUserTypeChange}\n              >\n                <option value=\"student\">Student</option>\n                <option value=\"recruiter\">Recruiter</option>\n              </select>\n            </div>\n\n            {(this.state.userType === \"recruiter\") ? (\n              <div>\n                {!this.state.showNewCompanyForm &&\n                  <div className=\"form-group  registerform-group row\">\n                    <label className=\"registerform-label col\" htmlFor=\"companyName\">Company Name</label>\n                    <select\n                        className=\"form-control registerform-control\"\n                        id=\"companyName\"\n                        onChange={this.handleCompanyNameChange}\n                      >\n                        <option disabled selected>Select one</option>\n                        {this.state.companies.map((company) => <option key={company._id} value={company.companyName}>{company.companyName}</option>)}\n                        <option value=\"registerNewCompany\">Create one</option>\n                      </select>\n                  </div>\n                }\n                {this.state.showNewCompanyForm &&\n                <div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyName\">Company Name</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyName\"\n                        value={this.state.companyName}\n                        onChange={this.handleNewCompanyNameChange}\n                      />\n                    </div>     \n    \n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyWebsite\">Company Website</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyWebsite\"\n                        value={this.state.companyWebsite}\n                        onChange={this.handleCompanyWebsiteChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyType\">Company Type</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyType\"\n                        value={this.state.companyType}\n                        onChange={this.handleCompanyTypeChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companySize\">Company Size</label>\n                      <select\n                        className=\"form-control registerform-control\"\n                        id=\"companySize\"\n                        value={this.state.companySize}\n                        onChange={this.handleCompanySizeChange}\n                      >\n                        <option value=\"Self-employed\">A: Self-employed</option>\n                        <option value=\"1-10 employees\">B: 1-10 employees</option>\n                        <option value=\"11-50 employees\">C: 11-50 employees</option>\n                        <option value=\"51-200 employees\">D: 51-200 employees</option>\n                        <option value=\"201-500 employees\">\n                          E: 201-500 employees\n                        </option>\n                        <option value=\"501-1000 employees\">\n                          F: 501-1000 employees\n                        </option>\n                        <option value=\"1001-5000 employees\">\n                          G: 1001-5000 employees\n                        </option>\n                        <option value=\"5001-10,000 employees\">\n                          H: 5001-10,000 employees\n                        </option>\n                        <option value=\"10,001+ employees\">\n                          I: 10,001+ employees\n                        </option>\n                      </select>\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyHeadquaters\">Headquaters Location</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"\"\n                        value={this.state.companyHeadquaters}\n                        onChange={this.handleCompanyHeadquatersChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companyFounded\">Year Founded</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companyFounded\"\n                        value={this.state.companyFounded}\n                        onChange={this.handleCompanyFoundedChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                      <label className=\"registerform-label col\" htmlFor=\"companySector\">Sector</label>\n                      <input\n                        type=\"text\"\n                        className=\"form-control registerform-control\"\n                        id=\"companySector\"\n                        value={this.state.companySector}\n                        onChange={this.handleCompanySectorChange}\n                      />\n                    </div>\n                    <div className=\"form-group  registerform-group row\">\n                    <label className=\"registerform-label col\" htmlFor=\"companyAbout\">About Your Company</label>\n                    <input\n                      type=\"text\"\n                      className=\"form-control registerform-control\"\n                      id=\"companyAbout\"\n                      value={this.state.companyAbout}\n                      onChange={this.handleCompanyAboutChange}\n                    />\n                    </div>\n                </div> \n                }\n                </div>\n              ):null}\n\n            <button\n              type=\"button\"\n              className=\"btn btn-success registerform-btn\"\n              onClick={this.handleRegister}\n            >\n              Register\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"btn btn-primary registerform-btn\"\n              onClick={this.onCancelClick}\n            >\n              Cancel\n            </button>\n          </form>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}