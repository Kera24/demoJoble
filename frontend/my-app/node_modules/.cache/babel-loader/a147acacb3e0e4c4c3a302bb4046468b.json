{"ast":null,"code":"import _classCallCheck from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";// Tabs needed: Create job, View Job,\nimport React,{Component}from'react';import axios from'axios';//import CreateJob from '../Jobs/CreateJob';\nimport'./User.css';var UserProfile=/*#__PURE__*/function(_Component){_inherits(UserProfile,_Component);var _super=_createSuper(UserProfile);function UserProfile(props){var _this;_classCallCheck(this,UserProfile);_this=_super.call(this,props);_this.handleUserNameChange=function(event){// console.log(event.target.value);\n_this.setState({userName:event.target.value});};_this.handleOldUserPasswordChange=function(event){// console.log(event.target.value);\n_this.setState({userOldPassword:event.target.value});};_this.handleNewUserPasswordChange=function(event){// console.log(event.target.value);\n_this.setState({userNewPassword:event.target.value});};_this.handleCompanyNameChange=function(event){// console.log(event.target.value);\n_this.setState({companyName:event.target.value});};_this.handleEditProfile=function(event){event.preventDefault();// alert('REGISTER: userName='+ this.state.userName + \", password=\" + this.state.userPassword);\nvar user={oldUserName:_this.props.user.userName,newUserName:_this.state.userName,userOldPassword:_this.state.userOldPassword,userNewPassword:_this.state.userNewPassword,companyName:_this.state.companyName};// check if user exsits in the database\n// otherwise, add a new user\naxios.post('/users/edit',user).then(function(res){var newUser={userName:_this.state.userName,userPassword:_this.state.userNewPassword,companyName:_this.state.companyName};document.getElementById(\"editProfileMessage\").style.color=\"green\";_this.setState({userName:'',userOldPassword:'',userNewPassword:'',companyName:'',editProfileMessage:'Changes saved!'});_this.handleUserEdit(newUser);}).catch(function(err){// display error message\ndocument.getElementById(\"editProfileMessage\").style.color=\"red\";_this.setState({editProfileMessage:\"There was an error editing the profile. Please try again.\"});}).finally(function(){window.scrollTo(0,0);});};_this.handleCancel=function(){// serve default user page\n_this.props.handleCancel();};_this.state={userName:_this.props.user.userName,userOldPassword:'',userNewPassword:'',companyName:_this.props.user.companyName,editProfileMessage:''};_this.handleUserNameChange=_this.handleUserNameChange.bind(_assertThisInitialized(_this));_this.handleOldUserPasswordChange=_this.handleOldUserPasswordChange.bind(_assertThisInitialized(_this));_this.handleNewUserPasswordChange=_this.handleNewUserPasswordChange.bind(_assertThisInitialized(_this));_this.handleCompanyNameChange=_this.handleCompanyNameChange.bind(_assertThisInitialized(_this));_this.handleEditProfile=_this.handleEditProfile.bind(_assertThisInitialized(_this));_this.handleUserEdit=_this.handleUserEdit.bind(_assertThisInitialized(_this));return _this;}_createClass(UserProfile,[{key:\"handleUserEdit\",value:function handleUserEdit(newUser){this.props.handleUserEdit(newUser);}},{key:\"render\",value:function render(){var user=this.props.user;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},/*#__PURE__*/React.createElement(\"h1\",null,\"Edit Profile\"),/*#__PURE__*/React.createElement(\"h5\",{id:\"editProfileMessage\"},this.state.editProfileMessage),/*#__PURE__*/React.createElement(\"form\",{className:\"myForm\"},/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Username\"},\"Username (min. 4 characters)\"),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",placeholder:user.userName,className:\"form-control\",id:\"userName\",value:this.state.userName,onChange:this.handleUserNameChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Password\"},\"Old Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control\",id:\"oldPassword\",value:this.state.userOldPassword,onChange:this.handleOldUserPasswordChange})),/*#__PURE__*/React.createElement(\"div\",{className:\"form-group\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"Password\"},\"New Password\"),/*#__PURE__*/React.createElement(\"input\",{type:\"password\",className:\"form-control\",id:\"newPassword\",value:this.state.userNewPassword,onChange:this.handleNewUserPasswordChange})),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:this.handleEditProfile},\"Save changes\"),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:this.handleCancel},\"Cancel\"))));}}]);return UserProfile;}(Component);export{UserProfile as default};","map":{"version":3,"sources":["/home/samspei0l/Documents/projects/go/myBetterExperience/frontend/my-app/src/Users/UserProfile.js"],"names":["React","Component","axios","UserProfile","props","handleUserNameChange","event","setState","userName","target","value","handleOldUserPasswordChange","userOldPassword","handleNewUserPasswordChange","userNewPassword","handleCompanyNameChange","companyName","handleEditProfile","preventDefault","user","oldUserName","newUserName","state","post","then","res","newUser","userPassword","document","getElementById","style","color","editProfileMessage","handleUserEdit","catch","err","finally","window","scrollTo","handleCancel","bind"],"mappings":"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","sourcesContent":["// Tabs needed: Create job, View Job,\nimport React, { Component } from 'react';\nimport axios from 'axios';\n//import CreateJob from '../Jobs/CreateJob';\nimport './User.css';\n\nexport default class UserProfile extends Component {\n    constructor(props){\n        super(props);\n\n        this.state = {\n            userName: this.props.user.userName,\n            userOldPassword: '',\n            userNewPassword: '',\n            companyName: this.props.user.companyName,\n            editProfileMessage: '',\n        };\n\n        this.handleUserNameChange = this.handleUserNameChange.bind(this);\n        this.handleOldUserPasswordChange = this.handleOldUserPasswordChange.bind(this);\n        this.handleNewUserPasswordChange = this.handleNewUserPasswordChange.bind(this);\n        this.handleCompanyNameChange = this.handleCompanyNameChange.bind(this);\n        this.handleEditProfile = this.handleEditProfile.bind(this);\n        this.handleUserEdit = this.handleUserEdit.bind(this);\n    }\n\n    handleUserNameChange = (event) => {\n        // console.log(event.target.value);\n        this.setState({userName: event.target.value});\n    }\n\n    handleOldUserPasswordChange = (event) => {\n        // console.log(event.target.value);\n        this.setState({userOldPassword: event.target.value});\n    }\n\n    handleNewUserPasswordChange = (event) => {\n        // console.log(event.target.value);\n        this.setState({userNewPassword: event.target.value});\n    }\n\n    handleCompanyNameChange = (event) =>{\n        // console.log(event.target.value);\n        this.setState({companyName: event.target.value});\n    }\n\n    handleEditProfile = (event) => {\n        event.preventDefault();\n        // alert('REGISTER: userName='+ this.state.userName + \", password=\" + this.state.userPassword);\n\n        const user = {\n            oldUserName: this.props.user.userName,\n            newUserName: this.state.userName,\n            userOldPassword: this.state.userOldPassword,\n            userNewPassword: this.state.userNewPassword,\n            companyName: this.state.companyName,\n        }\n\n        // check if user exsits in the database\n        // otherwise, add a new user\n        axios.post('/users/edit', user)\n            .then(res => {\n                const newUser = {\n                    userName: this.state.userName,\n                    userPassword: this.state.userNewPassword,\n                    companyName: this.state.companyName,\n                }\n\n                document.getElementById(\"editProfileMessage\").style.color = \"green\";\n                this.setState({\n                    userName: '',\n                    userOldPassword: '',\n                    userNewPassword: '',\n                    companyName:'',\n                    editProfileMessage: 'Changes saved!'\n                });\n\n                this.handleUserEdit(newUser);\n            })\n            .catch((err) => {\n                // display error message\n                document.getElementById(\"editProfileMessage\").style.color = \"red\";\n\n                this.setState({\n                    editProfileMessage: \"There was an error editing the profile. Please try again.\",\n                });\n            })\n            .finally(() => {\n                window.scrollTo(0, 0);\n            });\n    }\n\n    handleCancel = () => {\n        // serve default user page\n        this.props.handleCancel();\n    }\n\n    handleUserEdit(newUser) {\n        this.props.handleUserEdit(newUser);\n    }\n\n    render() {\n        const user = this.props.user;\n\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                <h1>Edit Profile</h1>\n                <h5 id=\"editProfileMessage\">{this.state.editProfileMessage}</h5>\n                <form className=\"myForm\">\n                    <div className=\"form-group\">\n                        <label htmlFor=\"Username\">Username (min. 4 characters)</label>\n                        <input type=\"text\" placeholder={user.userName} className=\"form-control\" id=\"userName\" value={this.state.userName} onChange={this.handleUserNameChange} />\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"Password\">Old Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"oldPassword\" value={this.state.userOldPassword} onChange={this.handleOldUserPasswordChange}/>\n                    </div>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"Password\">New Password</label>\n                        <input type=\"password\" className=\"form-control\" id=\"newPassword\" value={this.state.userNewPassword} onChange={this.handleNewUserPasswordChange}/>\n                    </div>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleEditProfile}>Save changes</button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleCancel}>Cancel</button>\n                </form>\n\n            </div>\n            </React.Fragment>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}